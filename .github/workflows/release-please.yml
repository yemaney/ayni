on:
    push:
      branches:
        - main

permissions:
    contents: write
    pull-requests: write

name: release-please

jobs:
    build:
      strategy:
        matrix:
          platform: [ubuntu-latest, macos-latest, windows-latest]
      runs-on: ${{ matrix.platform }}
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Set up Python 3.11
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'
        - name: Build the pkg
          run: make
        - name: Archive production artifacts
          uses: actions/upload-artifact@v3
          with:
            name: ayni-${{ matrix.platform }}
            path: |
              ayni
              pyproject.toml

    release-please:

        needs: build
        runs-on: ubuntu-latest
        steps:
        - uses: google-github-actions/release-please-action@v3
          id: release
          with:
            release-type: python
            package-name: release-please-action

        - name: Checkout
          if: ${{ steps.release.outputs.release_created }}
          uses: actions/checkout@v3

        - name: Download all workflow run artifacts
          if: ${{ steps.release.outputs.release_created }}
          uses: actions/download-artifact@v3
          with:
            path: ./artifacts

        - name: Display structure of downloaded files
          if: ${{ steps.release.outputs.release_created }}
          run: ls -R
          working-directory: ./artifacts

        - name: Zip all artifacts
          if: ${{ steps.release.outputs.release_created }}
          run: |
            mkdir archive
            zip -r ./archive/ayni-ubuntu-latest.zip ./artifacts/ayni-ubuntu-latest/
            zip -r ./archive/ayni-macos-latest.zip ./artifacts/ayni-macos-latest/
            zip -r ./archive/ayni-windows-latest.zip ./artifacts/ayni-windows-latest/

        - name: Upload Release Artifact
          if: ${{ steps.release.outputs.release_created }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run:
            gh release upload ${{ steps.release.outputs.tag_name }} ./archive/*
